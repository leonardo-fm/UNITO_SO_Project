int initializeSingalsHandlers();
int initializeConfig(char *configShareMemoryIdString, char *goodAnalyzerShareMemoryIdString, char *portAnalyzerShareMemoryIdString);
int initializePort(char *portIdString, char *portShareMemoryIdS, char *goodShareMemoryIdS, 
    char *acknowledgeInitShareMemoryIdS, char *endGoodShareMemoryIdS);
int initializePortStruct(char *portIdString, char *portShareMemoryIdS);
int initializeExchangeGoods();
int initializePortGoods(char *goodShareMemoryIdS, char *endGoodShareMemoryIdS);
int work();
int waitForStart();
int dumpData();
int waitForNewDay();
int freePendingMsgs();
int newDay();
int handlePA_ACCEPT(int queueId);
int handlePA_SE_GOOD(int queueId);
int handlePA_SE_SUMMARY(int goodId, int exchangeQuantity);
int handlePA_RQ_GOOD(int queueId);
int handlePA_RQ_SUMMARY(int goodId, int exchangeQuantity);
int handlePA_EOT();
int generateShareMemory(int sizeOfSegment);
int generateSemaphore(int semKey);
int setAcknowledge();
int cleanup();
void safeExit(int exitNumber);